Тестовое задание: Игра Mini Billiard.

В проекте сделана заготовка под игру в бильярд: стол с шестью лузами, обработка ввода от игрока и необходимая графика. Требуется реализовать логику бильярда, а именно - простейшую физику перемещения и столкновения шаров и их попадание в лузы. Изначально на столе присутствует один шар игрока и шесть шаров для игры.

Основные требования:
- при старте игры на столе должен располагаться один шар игрока слева и шесть шаров для игры справа (начальное расположение в коде уже задано, но без необходимой логики работы)
- при зажатии копки мыши происходит накопление силы удара (уже реализовано в тестовом задании)
- при отпускании кнопки мыши шар игрока должен начать двигаться в сторону курсора со скоростью, пропроциональной накопленной силе удара
- при столкновениях шары должны разлетаться подобно разлёту шаров при игре в бильярд
- при поподании шара в лузу шар должен исчезнуть с поля

Управление в игре:
- зажатие кнопки мыши - начало накопления силы удара
- отпускание кнопки мыши - приведение в движение шара игрока
- пробел - перезапуск игры

Что будет оцениваться:
- физичность поведения шаров на бильярдном столе с точки зрения обычного игрока
- выполнение требований, изложенных выше
- читаемость и аккуратность кода

Пояснения по структуре проекта:
- файлы проекта для Visual Studio 2022 находятся в папка project_vs2022
- файлы проекта для Code::Blocks находятся в папке project_codeblocks
- код-заготовка игры находится в файле game.cpp. Здесь должна происходить основная работа.
- в остальных файлах находится минимально необходимый "фреймворк" для обеспечения работы игры. Эти файлы не предполагаются для изменения при выполнении тестового задания.
- при необходимости в проект можно добавлять новые файлы
- код игры должен использовать только предоставленный "фреймворк" (Scene::что-то, Engine::что-то и Game::что-то) и стандартную библиотеку C++ (std::что-то). Никакие другие библиотеки не должны использоваться для выполнения тестового задания.

Краткая справка по доступным функциям "фреймворка":
- Scene::createBallMesh - создаёт новую модель шара
- Scene::createPocketMesh - создаёт новую модель лузы
- Scene::destroyMesh - удаляет модель, созданную любой из двух предыдущих функций
- Scene::placeMesh - распологает модель в мире в указанных координатах и повёрнутой под нужным углом
- Scene::setupBackground - задаёт размер бильярдного стола для отрисовки
- Scene::updateProgressBar - задаёт прогресс накопления силы удара для отрисовки
